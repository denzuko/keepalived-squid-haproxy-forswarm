global
  ssl-default-bind-options ssl-min-ver TLSv1.3
  ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
  mode http
  option http-server-close

resolvers internal
   nameserver dns1 192.168.50.30:53
   accepted_payload_size 8192

backend proxy
  balance roundrobin
  server-template web 5 _socks5._tcp.local resolvers internal check init-addr none

backend myservice
  balance roundrobin
  server-template web 5 _myservice._tcp.local resolvers internal check init-addr none

backend lets_encrypt
 mode http
 server local localhost:60001

frontend default
  bind 0.0.0.0:8080
  bind 0.0.0.0:8443 ssl crt /etc/letsencrypt/live/example.local/
  
  acl lets_encrypt path_beg /.well-known/acme-challenge/
  
  acl bad_ip src -f badips.lst
  tcp-request connection reject if bad_ip

  # use a stick table to track request rates
  stick-table type ip size 100k expire 2m store http_req_rate(1m)     
  http-request track-sc0 src

  # Log if they exceed the limit
  acl too_many_requests sc_http_req_rate(0) gt 20
  http-request set-var(txn.ratelimited) str(RATE-LIMITED) if too_many_requests
  http-request capture var(txn.ratelimited) len 12

  use_backend lets_encrypt if lets_encrypt 

  http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"

  http-request redirect scheme https unless { ssl_fc }
  http-request set-header X-Forwarded-For %[src]
  reqadd X-Forwarded-Proto:\ https
  option http-server-close
  default_backend myservice


####
# SSL
# letsencrypt-auto certonly --domains example.local --renew-by-default --http-01-port 60001 --agree-tos

## Monitoring
# https://www.haproxy.org/download/contrib/netsnmp-perl/README, Root OID: 1.3.6.1.4.1.29385.106
# https://github.com/loadbalancerorg/haproxy-snmp-agent

## Security
# cicap/ICAP - icap_service kwts_res respmod_precache icap://<IP address of the server with HAProxy>:1344/av/respmod
# waf - https://github.com/haproxy/spoa-modsecurity
# opentracing - https://github.com/haproxytech/spoa-opentracing
